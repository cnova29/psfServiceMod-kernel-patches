diff -cr /home/klutsh/Downloads/hero-2.6.29-5f74b252/arch/arm/configs/hero_defconfig /home/klutsh/psfServiceMod/CyanogenMod/kernel-hero/arch/arm/configs/hero_defconfig
*** /home/klutsh/Downloads/hero-2.6.29-5f74b252/arch/arm/configs/hero_defconfig	2010-06-15 10:58:05.000000000 +0100
--- /home/klutsh/psfServiceMod/CyanogenMod/kernel-hero/arch/arm/configs/hero_defconfig	2010-12-15 10:10:54.000000000 +0000
***************
*** 1093,1127 ****
  # CONFIG_USB is not set
  # CONFIG_USB_OTG_WHITELIST is not set
  # CONFIG_USB_OTG_BLACKLIST_HUB is not set
! 
! #
! # Enable Host or Gadget support to see Inventra options
! #
  
  #
  # NOTE: USB_STORAGE depends on SCSI but BLK_DEV_SD may also be needed;
  #
! # CONFIG_USB_GADGET is not set
  
  #
  # OTG and related infrastructure
  #
  
  #
  # USB Function Support
  #
! CONFIG_USB_FUNCTION=y
! CONFIG_USB_FUNCTION_MSM_HSUSB=y
! # CONFIG_USB_FUNCTION_NULL is not set
! # CONFIG_USB_FUNCTION_ZERO is not set
! # CONFIG_USB_FUNCTION_LOOPBACK is not set
! CONFIG_USB_FUNCTION_ADB=y
! # CONFIG_USB_FUNCTION_UMS is not set
! CONFIG_USB_FUNCTION_MASS_STORAGE=y
! #CONFIG_USB_FUNCTION_DIAG=y
! CONFIG_USB_FUNCTION_ETHER=y
! CONFIG_USB_FUNCTION_RNDIS=y
! CONFIG_USB_FUNCTION_MODEM=y
  CONFIG_MMC=y
  # CONFIG_MMC_DEBUG is not set
  CONFIG_MMC_UNSAFE_RESUME=y
--- 1093,1147 ----
  # CONFIG_USB is not set
  # CONFIG_USB_OTG_WHITELIST is not set
  # CONFIG_USB_OTG_BLACKLIST_HUB is not set
! # CONFIG_USB_GADGET_MUSB_HDRC is not set
  
  #
  # NOTE: USB_STORAGE depends on SCSI but BLK_DEV_SD may also be needed;
  #
! CONFIG_USB_GADGET=y
! # CONFIG_USB_GADGET_DEBUG is not set
! # CONFIG_USB_GADGET_DEBUG_FILES is not set
! # CONFIG_USB_GADGET_DEBUG_FS is not set
! CONFIG_USB_GADGET_VBUS_DRAW=2
! CONFIG_USB_GADGET_SELECTED=y
! # CONFIG_USB_GADGET_AT91 is not set
! # CONFIG_USB_GADGET_ATMEL_USBA is not set
! # CONFIG_USB_GADGET_FSL_USB2 is not set
! # CONFIG_USB_GADGET_LH7A40X is not set
! # CONFIG_USB_GADGET_OMAP is not set
! # CONFIG_USB_GADGET_PXA25X is not set
! # CONFIG_USB_GADGET_PXA27X is not set
! # CONFIG_USB_GADGET_S3C2410 is not set
! # CONFIG_USB_GADGET_IMX is not set
! # CONFIG_USB_GADGET_M66592 is not set
! # CONFIG_USB_GADGET_AMD5536UDC is not set
! # CONFIG_USB_GADGET_FSL_QE is not set
! # CONFIG_USB_GADGET_CI13XXX is not set
! # CONFIG_USB_GADGET_NET2280 is not set
! # CONFIG_USB_GADGET_GOKU is not set
! CONFIG_USB_GADGET_MSM_72K=y
! CONFIG_USB_MSM_72K=y
! # CONFIG_USB_GADGET_DUMMY_HCD is not set
! CONFIG_USB_GADGET_DUALSPEED=y
! # CONFIG_USB_ZERO is not set
! # CONFIG_USB_ETH is not set
! # CONFIG_USB_GADGETFS is not set
! # CONFIG_USB_FILE_STORAGE is not set
! # CONFIG_USB_G_SERIAL is not set
! # CONFIG_USB_MIDI_GADGET is not set
! # CONFIG_USB_G_PRINTER is not set
! CONFIG_USB_ANDROID=y
! # CONFIG_USB_CDC_COMPOSITE is not set
  
  #
  # OTG and related infrastructure
  #
+ # CONFIG_USB_GPIO_VBUS is not set
  
  #
  # USB Function Support
  #
! # CONFIG_USB_FUNCTION is not set
  CONFIG_MMC=y
  # CONFIG_MMC_DEBUG is not set
  CONFIG_MMC_UNSAFE_RESUME=y
diff -cr /home/klutsh/Downloads/hero-2.6.29-5f74b252/arch/arm/mach-msm/devices.c /home/klutsh/psfServiceMod/CyanogenMod/kernel-hero/arch/arm/mach-msm/devices.c
*** /home/klutsh/Downloads/hero-2.6.29-5f74b252/arch/arm/mach-msm/devices.c	2010-06-15 10:58:02.000000000 +0100
--- /home/klutsh/psfServiceMod/CyanogenMod/kernel-hero/arch/arm/mach-msm/devices.c	2010-12-15 07:38:07.181442980 +0000
***************
*** 32,40 ****
--- 32,45 ----
  #include "clock.h"
  #include "proc_comm.h"
  #include <mach/msm_hsusb.h>
+ #ifdef CONFIG_USB_FUNCTION
  #include <linux/usb/mass_storage_function.h>
+ #endif
  #include <mach/msm_rpcrouter.h>
  #include <mach/msm_hsusb_hw.h>
+ #ifdef CONFIG_USB_ANDROID
+ #include <linux/usb/android.h>
+ #endif
  
  static char *df_serialno = "000000000000";
  int usb_phy_error;
***************
*** 449,455 ****
--- 454,464 ----
  
  void __init msm_set_ums_device_id(int id)
  {
+ #ifdef CONFIG_USB_FUNCTION_MASS_STORAGE
  	usb_mass_storage_device.id = id;
+ #elif defined(CONFIG_USB_ANDROID)
+ 	android_usb_device.id = id;
+ #endif
  }
  
  void __init msm_add_usb_id_pin_function(void (*config_usb_id_gpios)(bool enable))
***************
*** 460,472 ****
--- 469,487 ----
  }
  void __init msm_enable_car_kit_detect(bool enable)
  {
+ #ifdef CONFIG_USB_FUNCTION
  	msm_hsusb_pdata.enable_car_kit_detect = enable;
+ #endif
  }
  
  void __init msm_init_ums_lun(int lun_num)
  {
  	if (lun_num > 0)
+ #ifdef CONFIG_USB_FUNCTION
  		mass_storage_pdata.nluns = lun_num;
+ #elif defined(CONFIG_USB_ANDROID)
+ 		android_usb_pdata.nluns = lun_num;
+ #endif
  }
  
  void __init msm_register_usb_phy_init_seq(int *int_seq)
***************
*** 483,495 ****
--- 498,514 ----
  
  void __init msm_add_usb_id_pin_gpio(int usb_id_pin_io)
  {
+ #ifdef CONFIG_USB_FUNCTION
  	msm_hsusb_pdata.usb_id_pin_gpio = usb_id_pin_io;
+ #endif
  }
  
  void __init msm_hsusb_set_product(struct msm_hsusb_product *product,
  			int num_products) {
+ #ifdef CONFIG_USB_FUNCTION
  	msm_hsusb_pdata.products = product;
  	msm_hsusb_pdata.num_products = num_products;
+ #endif
  }
  
  static struct resource resources_uart1[] = {
diff -cr /home/klutsh/Downloads/hero-2.6.29-5f74b252/arch/arm/mach-msm/htc_battery.c /home/klutsh/psfServiceMod/CyanogenMod/kernel-hero/arch/arm/mach-msm/htc_battery.c
*** /home/klutsh/Downloads/hero-2.6.29-5f74b252/arch/arm/mach-msm/htc_battery.c	2010-06-15 10:58:02.000000000 +0100
--- /home/klutsh/psfServiceMod/CyanogenMod/kernel-hero/arch/arm/mach-msm/htc_battery.c	2010-12-15 07:38:07.185442994 +0000
***************
*** 1560,1566 ****
  	wake_lock_init(&vbus_wake_lock, WAKE_LOCK_SUSPEND, "vbus_present");
  	mutex_init(&htc_batt_info.lock);
  	mutex_init(&htc_batt_info.rpc_lock);
! 	usb_register_notifier(&usb_status_notifier);
  	platform_driver_register(&htc_battery_driver);
  	batt_register_client(&batt_notify);
  	/* Jay, The msm_fb need to consult htc_battery for power policy */
--- 1560,1566 ----
  	wake_lock_init(&vbus_wake_lock, WAKE_LOCK_SUSPEND, "vbus_present");
  	mutex_init(&htc_batt_info.lock);
  	mutex_init(&htc_batt_info.rpc_lock);
! 	//usb_register_notifier(&usb_status_notifier);
  	platform_driver_register(&htc_battery_driver);
  	batt_register_client(&batt_notify);
  	/* Jay, The msm_fb need to consult htc_battery for power policy */
diff -cr /home/klutsh/Downloads/hero-2.6.29-5f74b252/arch/arm/mach-msm/include/mach/msm_hsusb.h /home/klutsh/psfServiceMod/CyanogenMod/kernel-hero/arch/arm/mach-msm/include/mach/msm_hsusb.h
*** /home/klutsh/Downloads/hero-2.6.29-5f74b252/arch/arm/mach-msm/include/mach/msm_hsusb.h	2010-06-15 10:57:53.000000000 +0100
--- /home/klutsh/psfServiceMod/CyanogenMod/kernel-hero/arch/arm/mach-msm/include/mach/msm_hsusb.h	2010-12-15 07:38:07.185442994 +0000
***************
*** 21,27 ****
  
  /* platform device data for msm_hsusb driver */
  
! #ifdef CONFIG_USB_FUNCTION
  /* matches a product ID to a list of enabled functions */
  struct msm_hsusb_product {
  	/* product ID for usb_device_descriptor.idProduct */
--- 21,27 ----
  
  /* platform device data for msm_hsusb driver */
  
! //#ifdef CONFIG_USB_FUNCTION
  /* matches a product ID to a list of enabled functions */
  struct msm_hsusb_product {
  	/* product ID for usb_device_descriptor.idProduct */
***************
*** 32,38 ****
  	*/
  	__u32 functions;
  };
! #endif
  
  struct msm_hsusb_platform_data {
  	/* hard reset the ULPI PHY */
--- 32,38 ----
  	*/
  	__u32 functions;
  };
! //#endif
  
  struct msm_hsusb_platform_data {
  	/* hard reset the ULPI PHY */
diff -cr /home/klutsh/Downloads/hero-2.6.29-5f74b252/drivers/usb/gadget/android.c /home/klutsh/psfServiceMod/CyanogenMod/kernel-hero/drivers/usb/gadget/android.c
*** /home/klutsh/Downloads/hero-2.6.29-5f74b252/drivers/usb/gadget/android.c	2010-06-28 11:09:55.000000000 +0100
--- /home/klutsh/psfServiceMod/CyanogenMod/kernel-hero/drivers/usb/gadget/android.c	2010-12-15 07:38:07.185442994 +0000
***************
*** 32,37 ****
--- 32,39 ----
  #include <linux/usb/ch9.h>
  #include <linux/usb/composite.h>
  #include <linux/usb/gadget.h>
+ #include <linux/proc_fs.h>      /* Necessary because we use the proc fs */
+ #include <asm/uaccess.h>        /* for copy_from_user */
  
  #include "f_mass_storage.h"
  #include "f_adb.h"
***************
*** 55,60 ****
--- 57,69 ----
  MODULE_LICENSE("GPL");
  MODULE_VERSION("1.0");
  
+ #define PROCFS_MAX_SIZE         100
+ #define PROCFS_NAME             "dusb"
+ static struct proc_dir_entry *Proc_File;
+ static char procfs_buffer[PROCFS_MAX_SIZE];
+ static unsigned long procfs_buffer_size = 0;
+ static int disabled = 0;
+ 
  static const char longname[] = "Gadget Android";
  
  /* Default vendor and product IDs, overridden by platform data */
***************
*** 307,312 ****
--- 316,345 ----
  	.probe = android_probe,
  };
  
+ int procfile_write(struct file *file, const char *buffer, unsigned long count,
+                    void *data)
+ {
+         procfs_buffer_size = count;
+         if (procfs_buffer_size > PROCFS_MAX_SIZE ) {
+                 procfs_buffer_size = PROCFS_MAX_SIZE;
+         }
+ 
+         if ( copy_from_user(procfs_buffer, buffer, procfs_buffer_size) ) {
+                 return -EFAULT;
+         }
+         if (procfs_buffer[0] == '1' && disabled == 0) {
+                 composite_disconnect(_android_dev->cdev->gadget);
+                 usb_composite_unregister(&android_usb_driver);
+                 misc_deregister(&adb_enable_device);
+                 platform_driver_unregister(&android_platform_driver);
+                 printk(KERN_INFO "Disabled USB\n");
+                 kfree(_android_dev);
+                 _android_dev = NULL;
+                 disabled = 1;
+         }
+         return procfs_buffer_size;
+ }
+ 
  static int __init init(void)
  {
  	struct android_dev *dev;
***************
*** 323,328 ****
--- 356,379 ----
  	dev->adb_product_id = ADB_PRODUCT_ID;
  	_android_dev = dev;
  
+         /* create the /proc file */
+         Proc_File = create_proc_entry(PROCFS_NAME, 0644, NULL);
+ 
+         if (Proc_File == NULL) {
+                 remove_proc_entry(PROCFS_NAME, NULL);
+                 printk(KERN_ALERT "Error: Could not initialize /proc/%s\n",
+                         PROCFS_NAME);
+                 return -ENOMEM;
+         }
+ 
+         Proc_File->write_proc = procfile_write;
+         Proc_File->mode           = S_IFREG | S_IRUGO;
+         Proc_File->uid    = 0;
+         Proc_File->gid    = 0;
+         Proc_File->size           = 37;
+ 
+         printk(KERN_INFO "/proc/%s created\n", PROCFS_NAME);
+ 
  	ret = platform_driver_register(&android_platform_driver);
  	if (ret)
  		return ret;
diff -cr /home/klutsh/Downloads/hero-2.6.29-5f74b252/drivers/usb/gadget/composite.c /home/klutsh/psfServiceMod/CyanogenMod/kernel-hero/drivers/usb/gadget/composite.c
*** /home/klutsh/Downloads/hero-2.6.29-5f74b252/drivers/usb/gadget/composite.c	2010-06-28 11:09:55.000000000 +0100
--- /home/klutsh/psfServiceMod/CyanogenMod/kernel-hero/drivers/usb/gadget/composite.c	2010-12-15 07:38:07.189443007 +0000
***************
*** 1061,1067 ****
  	.speed		= USB_SPEED_HIGH,
  
  	.bind		= composite_bind,
! 	.unbind		= __exit_p(composite_unbind),
  
  	.setup		= composite_setup,
  	.disconnect	= composite_disconnect,
--- 1061,1067 ----
  	.speed		= USB_SPEED_HIGH,
  
  	.bind		= composite_bind,
! 	.unbind		= composite_unbind,
  
  	.setup		= composite_setup,
  	.disconnect	= composite_disconnect,
***************
*** 1110,1116 ****
   * This function is used to unregister drivers using the composite
   * driver framework.
   */
! void __exit usb_composite_unregister(struct usb_composite_driver *driver)
  {
  	if (composite != driver)
  		return;
--- 1110,1116 ----
   * This function is used to unregister drivers using the composite
   * driver framework.
   */
! void usb_composite_unregister(struct usb_composite_driver *driver)
  {
  	if (composite != driver)
  		return;
diff -cr /home/klutsh/Downloads/hero-2.6.29-5f74b252/drivers/usb/gadget/f_adb.c /home/klutsh/psfServiceMod/CyanogenMod/kernel-hero/drivers/usb/gadget/f_adb.c
*** /home/klutsh/Downloads/hero-2.6.29-5f74b252/drivers/usb/gadget/f_adb.c	2010-06-28 11:09:55.000000000 +0100
--- /home/klutsh/psfServiceMod/CyanogenMod/kernel-hero/drivers/usb/gadget/f_adb.c	2010-12-15 07:38:07.189443007 +0000
***************
*** 470,476 ****
  static int adb_release(struct inode *ip, struct file *fp)
  {
  	printk(KERN_INFO "adb_release\n");
! 	_unlock(&_adb_dev->open_excl);
  	return 0;
  }
  
--- 470,477 ----
  static int adb_release(struct inode *ip, struct file *fp)
  {
  	printk(KERN_INFO "adb_release\n");
! 	if (_adb_dev)
! 		_unlock(&_adb_dev->open_excl);
  	return 0;
  }
  
